{"ast":null,"code":"var _jsxFileName = \"D:\\\\jqi22\\\\Documents\\\\COMP3334_Project-main (1)\\\\COMP3334_Project-main\\\\client\\\\src\\\\components\\\\MessageBox.jsx\";\nimport axios from 'axios';\nimport './MessageBox.css';\nimport React, { Component } from 'react';\nimport { publicRequest } from \"../requestMethods\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*#__PURE__*/_jsxDEV(\"style\", {\n  children: \".container\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 1\n}, this);\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // Initially, no file is selected\n      selectedFile: null\n    };\n    // On file select (from the pop up)\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n    // On file upload (click the upload button)\n    this.onFileUpload = () => {\n      // Create an object of formData\n      const formData = new FormData();\n\n      // Update the formData object\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name);\n\n      // Details of the uploaded file\n      console.log(this.state.selectedFile);\n\n      // Request made to the backend api\n      // Send formData object\n      publicRequest.post(\"api/product/creat\", formData);\n    };\n    // File content to be displayed after\n    // file upload is complete\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this);\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Want to Upload an NFT?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_button\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["axios","React","Component","publicRequest","jsxDEV","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","App","constructor","arguments","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","post","fileData","className","type","lastModifiedDate","toDateString","render","onChange","onClick"],"sources":["D:/jqi22/Documents/COMP3334_Project-main (1)/COMP3334_Project-main/client/src/components/MessageBox.jsx"],"sourcesContent":["import axios from 'axios';\nimport './MessageBox.css';\nimport React,{Component} from 'react';\nimport { publicRequest } from \"../requestMethods\";\n \n<style>\n.container{\n\n}\n</style>\nclass App extends Component {\n  \n    state = {\n \n      // Initially, no file is selected\n      selectedFile: null\n    };\n    \n    // On file select (from the pop up)\n    onFileChange = event => {\n    \n      // Update the state\n      this.setState({ selectedFile: event.target.files[0] });\n    \n    };\n    \n    // On file upload (click the upload button)\n    onFileUpload = () => {\n    \n      // Create an object of formData\n      const formData = new FormData();\n    \n      // Update the formData object\n      formData.append(\n        \"myFile\",\n        this.state.selectedFile,\n        this.state.selectedFile.name\n      );\n    \n      // Details of the uploaded file\n      console.log(this.state.selectedFile);\n    \n      // Request made to the backend api\n      // Send formData object\n      publicRequest.post(\"api/product/creat\", formData);\n    };\n    \n    // File content to be displayed after\n    // file upload is complete\n    fileData = () => {\n    \n      if (this.state.selectedFile) {\n         \n        return (\n          <div className='details'>\n            <h2>File Details:</h2>\n             \n<p>File Name: {this.state.selectedFile.name}</p>\n \n             \n<p>File Type: {this.state.selectedFile.type}</p>\n \n             \n<p>\n              Last Modified:{\" \"}\n              {this.state.selectedFile.lastModifiedDate.toDateString()}\n            </p>\n \n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <br />\n            <h4>Choose before Pressing the Upload button</h4>\n          </div>\n        );\n      }\n    };\n    \n    render() {\n    \n      return (\n        <div className='container'>\n            <h1>\n           Want to Upload an NFT?\n            </h1>\n           \n            <div className='upload_button'>\n                <input type=\"file\" onChange={this.onFileChange} />\n                <button onClick={this.onFileUpload}>\n                  Upload\n                </button>\n            </div>\n          {this.fileData()}\n        </div>\n      );\n    }\n  }\n \n  export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}